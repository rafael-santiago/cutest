#
#                               Copyright (C) 2016 by Rafael Santiago
#
# This is a free software. You can redistribute it and/or modify under
# the terms of the GNU General Public License version 2.
#
#
include on windows ~/toolsets/msvc/util/msvc_utils.hsl

local function run_cmd_without_output(cmdline type string) : result type int {
    if (hefesto.sys.os_name() != "windows") {
        $cmdline = $cmdline + " > /dev/null 2>&1";
    } else {
        $cmdline = $cmdline + " > nul 2>&1";
    }
    result hefesto.sys.run($cmdline);
}

local function has_gcc() : result type int {
    result (run_cmd_without_output("gcc --version") == 0);
}

local function has_clang() : result type int {
    result (run_cmd_without_output("clang --version") == 0);
}

function get_toolset_basename() : result type string {
    var chosen_toolset type string;
    var toolset_option type list;

    $toolset_option = hefesto.sys.get_option("toolset");

    if ($toolset_option.count() > 0) {
        $chosen_toolset = $toolset_option.item(0);
        $chosen_toolset.replace("(lib|app)$", "");
    } else {
        $chosen_toolset = "";
        if (has_gcc()) {
            $chosen_toolset = "gcc-c-";
        } else if (has_clang()) {
            $chosen_toolset = "clang-c-";
        }
    }

    if ($chosen_toolset.len() == 0) {
        hefesto.sys.echo("PANIC: You need to install GCC or Clang before continuing.\nAborted.\n");
        hefesto.project.abort(1);
    }

    result $chosen_toolset;
}

function composite_libcutest() : result type int {
    var msvcrtlib type string;
    var compile_model type list;
    $compile_model = hefesto.sys.get_option("compile-model");
    $msvcrtlib = "msvcrt.lib";
    if ($compile_model.count() > 0) {
        var compile_model_data type string;
        $compile_model_data = $compile_model.item(0);
        if ($compile_model_data == "debug") {
            $msvcrtlib = "msvcrtd.lib";
        }
    }

    if (msvc_configure_dev_env() != 0) {
        hefesto.sys.echo("ERROR: Unable to configure development environment.\n");
        result 1;
    }

    var vsdevcmd type string;
    $vsdevcmd = hefesto.sys.env("HEFESTO_MSVC_TOOLSET_VSDEVCMD");

    var arch type string;
    $arch = msvc_get_platform();
    if ($arch == "Win32") {
        $arch = "x86";
    }
    $msvcrtlib = "\"%VCToolsInstallDir%\"\\" + $arch + "\\" + $msvcrtlib;
    var composite_command type string;
    $composite_command = $vsdevcmd + " && lib.exe /OUT:lib\\libcutest.lib lib\\libcuteststaged.lib " + $msvcrtlib;
    var exit_code type int;
    $exit_code = hefesto.sys.run($composite_command);
    if ($exit_code == 0) {
        var path type string;
        $path = hefesto.sys.make_path(hefesto.sys.pwd(), "lib\\libcuteststaged.lib");
        hefesto.sys.rm($path);
        $path.replace("lib$", "pdb");
        hefesto.sys.rm($path);
    }
    result $exit_code;
}
